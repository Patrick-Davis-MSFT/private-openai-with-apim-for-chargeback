<policies>
    <inbound>
        <base />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Response.StatusCode == 200)">
                <log-to-eventhub logger-id="OpenAILogger">@{
                var responseBody = context.Response.Body?.As<JObject>(true);
                var requestBody = (JObject)context.Variables["requestData"];                
                return new JObject(
                    new JProperty("event-time", DateTime.UtcNow.ToString()),                    
                    new JProperty("id", responseBody["id"].ToString()),
                    new JProperty("operation", responseBody["object"].ToString()),
                    new JProperty("model", responseBody["model"].ToString()),
                    new JProperty("completion_text", responseBody["choices"][0]["message"]["content"].ToString()),
                    new JProperty("completion_tokens", responseBody["usage"]["completion_tokens"].ToString()),
                    new JProperty("prompt_tokens", responseBody["usage"]["prompt_tokens"].ToString()),
                    new JProperty("total_tokens", responseBody["usage"]["total_tokens"].ToString())
                ).ToString();
        }</log-to-eventhub>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>